version: '3.1'
services:
  node:
    image: node:19.5.0
    expose:
      - 8082
    ports:
      - 8082:8082
    volumes:
      - .:/app
      - /app/node_modules
    working_dir: '/app'
    command: sh -c "npm ci && npm run dev"
    environment:
      - DATABASE_URL=$MONGO_DB_DATABASE
      - APP_PORT
  mongo1:
    image: mongo:5
    container_name: mongo1
    command: ["--replSet", "my-replica-set", "--bind_ip_all", "--port", "30001"]
    expose:
      - 30001
    volumes:
      - ./data/mongo-1:/data/db
    ports:
      - 30001:30001
    healthcheck:
      test: test $$(echo "rs.initiate({_id:'my-replica-set',members:[{_id:0,host:\"mongo1:30001\"},{_id:1,host:\"mongo2:30002\"},{_id:2,host:\"mongo3:30003\"}]}).ok || rs.status().ok" | mongo --port 30001 --quiet) -eq 1
      interval: 10s
      start_period: 30s
  mongo2:
    image: mongo:5
    container_name: mongo2
    command: ["--replSet", "my-replica-set", "--bind_ip_all", "--port", "30002"]
    volumes:
      - ./data/mongo-2:/data/db
    expose:
      - 30002
    ports:
      - 30002:30002
  mongo3:
    image: mongo:5
    container_name: mongo3
    command: ["--replSet", "my-replica-set", "--bind_ip_all", "--port", "30003"]
    volumes:
      - ./data/mongo-3:/data/db
    expose:
      - 30003
    ports:
      - 30003:30003
  mongo-ui:
    image: mongo-express
    restart: always
    ports:
      - 8086:8081
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://mongo1:30001,mongo2:30002,mongo3:30003/?replicaSet=my-replica-set
